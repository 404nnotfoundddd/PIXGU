// This is Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id String @unique @default(cuid())

  ipAddress          String    @unique
  isAdmin            Boolean   @default(false)
  nickname           String    @unique
  preferences        Json      @default(dbgenerated("{}"))
  statistics         Json      @default(dbgenerated("{}"))
  achievements       Json      @default(dbgenerated("{}"))
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  isBanned           Boolean   @default(false)
  playingRoom        Room?     @relation(fields: [playingRoomId], references: [id])
  playingRoomId      String?   @unique
  writtenArticles    Article[] @relation("WrittenArticles")
  editedArticles     Article[] @relation("EditedArticles")
  translatedArticles Article[] @relation("TranslatedArticles")
  gender             String

  @@id([id])
  @@index([playingRoomId])
}

model Room {
  id String @id @default(cuid())

  name       String  @unique
  password   String?
  maxPlayers Int
  playingBy  User[]
}

model Article {
  id          String            @id @default(cuid())
  categories  ArticleCategory[]
  headerText  String
  content     String            @db.Text
  writers     User[]            @relation("WrittenArticles")
  editors     User[]            @relation("EditedArticles")
  translaters User[]            @relation("TranslatedArticles")
}

model ArticleCategory {
  id       String    @id @default(cuid())
  name     String
  articles Article[]
}

model Cutscene {
  id            String          @id @default(cuid())
  // the name column shouldn't be translated when translating cutscene to other languages
  name          String
  language      String          @db.Char(2)
  CutsceneStage CutsceneStage[]
}

model CutsceneStage {
  id String @id @default(cuid())

  videoPath String @db.VarChar(80)
  imagePath String @db.VarChar(80)
  text      String @db.Text

  Cutscene   Cutscene? @relation(fields: [cutsceneId], references: [id])
  cutsceneId String?

  @@index([cutsceneId])
}
