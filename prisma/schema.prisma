// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory
// What's next directory

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @unique @default(cuid())

  ipAddress    String
  isAdmin      Boolean   @default(false)
  nickname     String
  preferences  Json      @default(dbgenerated("{}"))
  statistics   Json      @default(dbgenerated("{}"))
  achievements Json      @default(dbgenerated("{}"))
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  isBanned     Boolean   @default(false)
  playingRoom  Room[]
  articles     Article[]

  @@id([id])
}

model Room {
  id String @id @default(cuid())

  name       String  @unique
  password   String?
  maxPlayers Int
  playingBy  User[]
}

model Article {
  id         String                @id @default(cuid())
  categories CategoriesOnArticle[]
  headerText String
  content    String
  writtenBy  User?                 @relation(fields: [userId], references: [id])
  userId     String?

  @@index([userId])
}

model Category {
  id       String                @id @default(cuid())
  name     String
  Articles CategoriesOnArticle[]
}

model CategoriesOnArticle {
  Article    Article  @relation(fields: [ArticleId], references: [id])
  ArticleId  String // relation scalar field (used in the `@relation` attribute above)
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String // relation scalar field (used in the `@relation` attribute above)
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([ArticleId, categoryId])
  @@index([ArticleId])
  @@index([categoryId])
}
